$src: '../';
// BACKGROUND
  @mixin bgp($img,$x:0,$y:0,$c:transparent,$r:no-repeat) {
    background: url(#{$src}images/theme/#{$img}.png) $c $x $y $r
  }
  @mixin bgj($img,$x:0,$y:0,$c:transparent,$r:no-repeat) {
    background: url(#{$src}images/theme/#{$img}.jpg) $c $x $y $r
  }
  @mixin bgd($img,$x:0,$y:0,$c:transparent,$r:no-repeat){
    background: url(#{$src}data:image/png;base64,#{$img}) $c $x $y $r
  }
  @mixin bgg($img,$x:0,$y:0,$c:transparent,$r:no-repeat){
    background: url(#{$src}images/theme/#{$img}.gif) $c $x $y $r
  }
  @mixin bgz($z1:cover){
    background-size: $z1
  }
// FOOTER
  // push footer
  @mixin footer_fixed($h, $t:0) {
    html,body {
      height: 100%;
    }
    body {
      &>.page__item {
        min-height: 100%;
        &:after {
          content: ' ';
          display: block;
          height: $h+$t;
        }
      }
      &>.footer {
        height: $h;
        margin-top: -$h;
      }
    }
    html.fancybox-lock body {
      overflow: visible !important;
    }
  }
// IMAGES
  @mixin icons($url:'#{$src}images/theme/icons.png') {
    background-image: url($url);
    background-position: 100% 100%;
    background-repeat: no-repeat;
    display: inline-block;
    position: relative;
    top: -1px;
    vertical-align: middle;
  }
  @mixin img_fit($h:200px, $bg:#fff) {
    background: $bg;
    display: block;
    overflow: hidden;
    text-align: center;
    font-size: 0;
    height: $h;
    line-height: $h;
    img {
      max-width: 100%;
      max-height: 100%;
    }
  }
  @mixin img_zoom($op:.7) {
    overflow: hidden;
    display: inline-block;
    img {
      transition: all 0.35s;
    }
    &:hover img {
      transform: scale(1.1);
      opacity: $op;
    }
  }
  @mixin img_radius($z:100px,$bd_z:5px) {
    border: $bd_z solid #e00;
    display: inline-block;
    border-radius: 50%;
    >* {
      width: $z;
      height: $z;
      display: block;
      overflow: hidden;
      border-radius: 50%;
      img {
        width: 100%;
        height: auto;
        vertical-align: middle;
      }
    }
  }
  @mixin img_center($w:200px,$h:200px) {
    position: relative;
    overflow: hidden;
    width: $w;
    height: $h;
    img {
      margin: auto;
      max-width: 100%;
      height: auto;
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
    }
  }
// SIZE
  @mixin z($value) {
    $width: nth($value, 1);
    $height: $width;

    @if length($value) > 1 {
      $height: nth($value, 2);
    }

    @if is-size($height) {
      height: $height;
    } @else {
      @warn "`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.";
    }

    @if is-size($width) {
      width: $width;
    } @else {
      @warn "`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.";
    }
  }
// BORDER
  // border-link
  @mixin border_link($color: $tm_color_link_a, $hover: $tm_color_link_b, $type: dotted) {
    border-width: 0 0 0.1em;
    display: inline-block;
    text-decoration: none !important;
    line-height: 0.9em;
    color: $color;
    border-color: $color;
    @if $type == solid {
      border-style: solid;
    } @else if $type == dashed {
      border-style: dashed;
    } @else {
      border-style: dotted;
    }
    &:hover {
      color: $hover;
      border-color: $hover;
    }
  }
  // border-radius
  @mixin br($r:50%) {
    border-radius: $r
  }
// TRANSITION
  @mixin tsn($speed: .15) {
    transition:
      box-shadow $speed+s,
      background-color $speed+s,
      border-color $speed+s,
      color $speed+s
  }
  @mixin tsn_ops($speed: .15) {
    transition: opacity $speed+s
  }
  @mixin tsn_all($speed: .15) {
    transition: all $speed+s
  }
  @mixin tsn_off() {
    transition: none !important
  }
// FORM
  // placehold
  @mixin placeholders {
    $placeholders: ":-webkit-input" ":-moz" "-moz" "-ms-input";
    @each $placeholder in $placeholders {
      &:#{$placeholder}-placeholder {
        @content;
      }
    }
  }
  // @type List
  $text-inputs-list: 'input[type="color"]',
                     'input[type="date"]',
                     'input[type="datetime"]',
                     'input[type="datetime-local"]',
                     'input[type="email"]',
                     'input[type="month"]',
                     'input[type="number"]',
                     'input[type="password"]',
                     'input[type="search"]',
                     'input[type="tel"]',
                     'input[type="text"]',
                     'input[type="time"]',
                     'input[type="url"]',
                     'input[type="week"]',
                     'textarea';
  $text-inputs:        assign-inputs($text-inputs-list);
  $text-inputs-active: assign-inputs($text-inputs-list, active);
  $text-inputs-focus:  assign-inputs($text-inputs-list, focus);
  $text-inputs-hover:  assign-inputs($text-inputs-list, hover);
// LINEAR-GRADIENT
  @mixin lgr($t,$b) {
    background-color: $b;
    background-image: linear-gradient(to bottom, $t 0%,$b 100%);
  }
// FONTS
  @mixin font($ff, $url) {
    @font-face {
      font-family: $ff;
      src: url(#{$src+$url}.eot);
      src: url(#{$src+$url}.eot?#iefix) format('embedded-opentype'),
           url(#{$src+$url}.woff) format('woff'),
           url(#{$src+$url}.woff2) format('woff2'),
           url(#{$src+$url}.ttf) format('truetype'),
           url(#{$src+$url}.svg##{$ff}) format('svg');
      font-weight: normal;
      font-style: normal;
    }
  }
  @mixin ffn {
    font-weight: normal;
    font-style: normal;
  }
